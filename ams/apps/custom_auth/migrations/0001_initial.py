# Generated by Django 4.2.16 on 2025-02-11 16:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company_name', models.CharField(default='', max_length=250)),
                ('image', models.TextField(blank=True, default='', max_length=200, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Others')], max_length=1, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('callingcode', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('address', models.TextField(blank=True, default='', null=True)),
                ('pincode', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('country', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('is_password_set', models.BooleanField(default=False)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('countryname', models.CharField(default='', max_length=200)),
                ('sortname', models.CharField(default='', max_length=200)),
                ('countrycode', models.CharField(default='', max_length=200)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Country',
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joiningdate', models.DateField(null=True)),
                ('min_wages', models.FloatField(default=0.0)),
                ('qualification', models.CharField(default='', max_length=250)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employee',
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typename', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Usertype',
                'verbose_name_plural': 'Usertype',
                'db_table': 'usertype',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statename', models.CharField(max_length=200)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
                ('countryid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='state', to='custom_auth.country')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'State',
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sitename', models.CharField(max_length=200)),
                ('address', models.TextField(blank=True, default='', null=True)),
                ('country', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('state', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('city', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('latitude', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siteowner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Site',
                'db_table': 'site',
            },
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
                ('employee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employeealeave', to='custom_auth.employee')),
                ('site_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteleave', to='custom_auth.site')),
            ],
            options={
                'verbose_name': 'Leave',
                'verbose_name_plural': 'Leave',
                'db_table': 'leave',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='site_info',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteinformation', to='custom_auth.site'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employeeinformation', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cityname', models.CharField(max_length=200)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
                ('stateid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='city', to='custom_auth.state')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'City',
                'db_table': 'city',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance', models.CharField(blank=True, choices=[('P', 'Present'), ('A', 'Absent'), ('H', 'Half_day')], max_length=1, null=True)),
                ('date', models.DateTimeField(null=True)),
                ('isdeleted', models.BooleanField(default=False)),
                ('createddate', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('updateddate', models.DateTimeField(null=True)),
                ('site_info', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='siteattendance', to='custom_auth.site')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='employeeattendance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendance',
                'db_table': 'attendance',
            },
        ),
        migrations.AddField(
            model_name='users',
            name='usertype',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='custom_auth.usertype'),
        ),
    ]
