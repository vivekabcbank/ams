version: '3'

services:
  db:
    image: postgres:17.3
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}  # Use a strong password here
    volumes:
      - ams_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ams_network

  ams-web:
#    image: vivekath1/ams-web:v.0.1
#     Pull from Docker Hub< before pull push from local follow below steps>
#    1. docker build --platform linux/amd64 -f Dockerfile.prod -t ams-web:v.0.1 .  OR  docker build -f Dockerfile.prod -t ams-web:v.0.1 .
#    2. docker tag ams-web:v.0.1 vivekath1/ams-web:v.0.1
#    3. docker push vivekath1/ams-web:v.0.1
    image: ams-web:v.0.1   # take from Docker Desktop or can directly take from Docker Desktop
    container_name: ams-web
    depends_on:
      - db
    command: >
      sh -c "/usr/local/bin/wait-for-it db:5432 -- python manage.py migrate --noinput && gunicorn --bind 0.0.0.0:8000 ams.wsgi:application"
    ports:
      - "8000:8000"
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh  # Mount the script correctly
      - ./static:/app/static  # Ensure static files are correctly placed here
      - /logs:/var/log/django
    networks:
      - ams_network

  nginx:
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf  # Custom Nginx config file
    ports:
      - "80:80"
    depends_on:
      - ams-web
    networks:
      - ams_network

volumes:
  ams_db_data:
    driver: local

networks:
  ams_network:
    driver: bridge
